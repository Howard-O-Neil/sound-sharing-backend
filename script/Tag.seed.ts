import "reflect-metadata"
import { TagType } from "@/src/entity/TagType";
import { Tag } from "@/src/entity/Tag";
import { exit } from "process";
import { Conn } from "@/src/connection";

const func = async () => {
  const connection = await Conn.getDBConnection()
  const TagTypeRepos = connection.getRepository(TagType)
  const listType = await TagTypeRepos.find()

  interface type_tag {
    type: TagType;
    tag: Tag[],
  }

  const typeArr: Map<string | undefined, type_tag> = new Map()

  for (let i in listType) {
    typeArr.set(listType[i].name, {
      type: listType[i],
      tag: []
    })
  }

  typeArr.get("Type")?.tag.push(new Tag("Acoustic", typeArr.get("Type")?.type))
  typeArr.get("Type")?.tag.push(new Tag("Chord", typeArr.get("Type")?.type))
  typeArr.get("Type")?.tag.push(new Tag("Down Sweep/Fall", typeArr.get("Type")?.type))
  typeArr.get("Type")?.tag.push(new Tag("Dry", typeArr.get("Type")?.type))
  typeArr.get("Type")?.tag.push(new Tag("Harmony", typeArr.get("Type")?.type))
  typeArr.get("Type")?.tag.push(new Tag("Loop", typeArr.get("Type")?.type))
  typeArr.get("Type")?.tag.push(new Tag("Melody", typeArr.get("Type")?.type))
  typeArr.get("Type")?.tag.push(new Tag("Mixed", typeArr.get("Type")?.type))
  typeArr.get("Type")?.tag.push(new Tag("Monophonic", typeArr.get("Type")?.type))
  typeArr.get("Type")?.tag.push(new Tag("One Shot", typeArr.get("Type")?.type))
  typeArr.get("Type")?.tag.push(new Tag("Polyphonic", typeArr.get("Type")?.type))
  typeArr.get("Type")?.tag.push(new Tag("Processed", typeArr.get("Type")?.type))
  typeArr.get("Type")?.tag.push(new Tag("Progression", typeArr.get("Type")?.type))
  typeArr.get("Type")?.tag.push(new Tag("Riser/Sweep", typeArr.get("Type")?.type))
  typeArr.get("Type")?.tag.push(new Tag("Short", typeArr.get("Type")?.type))
  typeArr.get("Type")?.tag.push(new Tag("Wet", typeArr.get("Type")?.type));

  await connection.save(typeArr.get("Type")?.tag)

  typeArr.get("Timbre")?.tag.push(new Tag("Bassy", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Boomy", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Breathy", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Bright", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Buzzy", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Clean", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Coarse/Harsh", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Cold", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Dark", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Delicate", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Detuned", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Dissonant", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Distorted", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Exotic", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Fat", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Full", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Glitchy", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Granular", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Gloomy", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Hard", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("High", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Hollow", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Low", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Metallic", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Muffled", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Muted", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Narrow", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Noisy", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Round", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Sharp", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Shimmering", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Sizzling", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Smooth", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Soft", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Piercing", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Thin", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Tinny", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Warm", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Wide", typeArr.get("Timbre")?.type))
  typeArr.get("Timbre")?.tag.push(new Tag("Wooden", typeArr.get("Timbre")?.type));

  await connection.save(typeArr.get("Timbre")?.tag)

  typeArr.get("Genre")?.tag.push(new Tag("Ambient", typeArr.get("Genre")?.type))
  typeArr.get("Genre")?.tag.push(new Tag("Breaks", typeArr.get("Genre")?.type))
  typeArr.get("Genre")?.tag.push(new Tag("Chillout", typeArr.get("Genre")?.type))
  typeArr.get("Genre")?.tag.push(new Tag("Chiptune", typeArr.get("Genre")?.type))
  typeArr.get("Genre")?.tag.push(new Tag("Cinematic", typeArr.get("Genre")?.type))
  typeArr.get("Genre")?.tag.push(new Tag("Classical", typeArr.get("Genre")?.type))
  typeArr.get("Genre")?.tag.push(new Tag("Acid House", typeArr.get("Genre")?.type))
  typeArr.get("Genre")?.tag.push(new Tag("Deep House", typeArr.get("Genre")?.type))
  typeArr.get("Genre")?.tag.push(new Tag("Disco", typeArr.get("Genre")?.type))
  typeArr.get("Genre")?.tag.push(new Tag("Drum & Bass", typeArr.get("Genre")?.type))
  typeArr.get("Genre")?.tag.push(new Tag("Dubstep", typeArr.get("Genre")?.type))
  typeArr.get("Genre")?.tag.push(new Tag("Ethnic/World", typeArr.get("Genre")?.type))
  typeArr.get("Genre")?.tag.push(new Tag("Electro House", typeArr.get("Genre")?.type))
  typeArr.get("Genre")?.tag.push(new Tag("Electro", typeArr.get("Genre")?.type))
  typeArr.get("Genre")?.tag.push(new Tag("Electro Swing", typeArr.get("Genre")?.type))
  typeArr.get("Genre")?.tag.push(new Tag("Folk/Country", typeArr.get("Genre")?.type))
  typeArr.get("Genre")?.tag.push(new Tag("Funk/Soul", typeArr.get("Genre")?.type))
  typeArr.get("Genre")?.tag.push(new Tag("Jazz", typeArr.get("Genre")?.type))
  typeArr.get("Genre")?.tag.push(new Tag("Jungle", typeArr.get("Genre")?.type))
  typeArr.get("Genre")?.tag.push(new Tag("House", typeArr.get("Genre")?.type))
  typeArr.get("Genre")?.tag.push(new Tag("Hip Hop", typeArr.get("Genre")?.type))
  typeArr.get("Genre")?.tag.push(new Tag("Latin/Afro Cuban", typeArr.get("Genre")?.type))
  typeArr.get("Genre")?.tag.push(new Tag("Minimal House", typeArr.get("Genre")?.type))
  typeArr.get("Genre")?.tag.push(new Tag("Nu Disco", typeArr.get("Genre")?.type))
  typeArr.get("Genre")?.tag.push(new Tag("R&B", typeArr.get("Genre")?.type))
  typeArr.get("Genre")?.tag.push(new Tag("Reggae/Dub", typeArr.get("Genre")?.type))
  typeArr.get("Genre")?.tag.push(new Tag("Reggaeton", typeArr.get("Genre")?.type))
  typeArr.get("Genre")?.tag.push(new Tag("Rock", typeArr.get("Genre")?.type))
  typeArr.get("Genre")?.tag.push(new Tag("Pop", typeArr.get("Genre")?.type))
  typeArr.get("Genre")?.tag.push(new Tag("Progressive House", typeArr.get("Genre")?.type))
  typeArr.get("Genre")?.tag.push(new Tag("Tech House", typeArr.get("Genre")?.type))
  typeArr.get("Genre")?.tag.push(new Tag("Techno", typeArr.get("Genre")?.type))
  typeArr.get("Genre")?.tag.push(new Tag("Trance", typeArr.get("Genre")?.type))
  typeArr.get("Genre")?.tag.push(new Tag("Trap", typeArr.get("Genre")?.type))
  typeArr.get("Genre")?.tag.push(new Tag("Vocals", typeArr.get("Genre")?.type));

  await connection.save(typeArr.get("Genre")?.tag)

  typeArr.get("Articulation")?.tag.push(new Tag("Arpeggiated", typeArr.get("Articulation")?.type))
  typeArr.get("Articulation")?.tag.push(new Tag("Decaying", typeArr.get("Articulation")?.type))
  typeArr.get("Articulation")?.tag.push(new Tag("Echoing", typeArr.get("Articulation")?.type))
  typeArr.get("Articulation")?.tag.push(new Tag("Long Release", typeArr.get("Articulation")?.type))
  typeArr.get("Articulation")?.tag.push(new Tag("Legato", typeArr.get("Articulation")?.type))
  typeArr.get("Articulation")?.tag.push(new Tag("Glissando/Glide", typeArr.get("Articulation")?.type))
  typeArr.get("Articulation")?.tag.push(new Tag("Pad", typeArr.get("Articulation")?.type))
  typeArr.get("Articulation")?.tag.push(new Tag("Percussive", typeArr.get("Articulation")?.type))
  typeArr.get("Articulation")?.tag.push(new Tag("Pitch Bend", typeArr.get("Articulation")?.type))
  typeArr.get("Articulation")?.tag.push(new Tag("Plucked", typeArr.get("Articulation")?.type))
  typeArr.get("Articulation")?.tag.push(new Tag("Pulsating", typeArr.get("Articulation")?.type))
  typeArr.get("Articulation")?.tag.push(new Tag("Punchy", typeArr.get("Articulation")?.type))
  typeArr.get("Articulation")?.tag.push(new Tag("Randomized", typeArr.get("Articulation")?.type))
  typeArr.get("Articulation")?.tag.push(new Tag("Slow Attack", typeArr.get("Articulation")?.type))
  typeArr.get("Articulation")?.tag.push(new Tag("Sweep/Filter Mod", typeArr.get("Articulation")?.type))
  typeArr.get("Articulation")?.tag.push(new Tag("Staccato/Stabs", typeArr.get("Articulation")?.type))
  typeArr.get("Articulation")?.tag.push(new Tag("Stuttered/Gated", typeArr.get("Articulation")?.type))
  typeArr.get("Articulation")?.tag.push(new Tag("Straight", typeArr.get("Articulation")?.type))
  typeArr.get("Articulation")?.tag.push(new Tag("Sustained", typeArr.get("Articulation")?.type))
  typeArr.get("Articulation")?.tag.push(new Tag("Syncopated", typeArr.get("Articulation")?.type))
  typeArr.get("Articulation")?.tag.push(new Tag("Uptempo", typeArr.get("Articulation")?.type))
  typeArr.get("Articulation")?.tag.push(new Tag("Wobble", typeArr.get("Articulation")?.type))
  typeArr.get("Articulation")?.tag.push(new Tag("Vibrato", typeArr.get("Articulation")?.type));

  await connection.save(typeArr.get("Articulation")?.tag)

  typeArr.get("Character")?.tag.push(new Tag("Analog", typeArr.get("Character")?.type))
  typeArr.get("Character")?.tag.push(new Tag("Compressed", typeArr.get("Character")?.type))
  typeArr.get("Character")?.tag.push(new Tag("Digital", typeArr.get("Character")?.type))
  typeArr.get("Character")?.tag.push(new Tag("Dynamic", typeArr.get("Character")?.type))
  typeArr.get("Character")?.tag.push(new Tag("Loud", typeArr.get("Character")?.type))
  typeArr.get("Character")?.tag.push(new Tag("Range", typeArr.get("Character")?.type))
  typeArr.get("Character")?.tag.push(new Tag("Female", typeArr.get("Character")?.type))
  typeArr.get("Character")?.tag.push(new Tag("Funky", typeArr.get("Character")?.type))
  typeArr.get("Character")?.tag.push(new Tag("Jazzy", typeArr.get("Character")?.type))
  typeArr.get("Character")?.tag.push(new Tag("Lo Fi", typeArr.get("Character")?.type))
  typeArr.get("Character")?.tag.push(new Tag("Male", typeArr.get("Character")?.type))
  typeArr.get("Character")?.tag.push(new Tag("Quiet", typeArr.get("Character")?.type))
  typeArr.get("Character")?.tag.push(new Tag("Vintage", typeArr.get("Character")?.type))
  typeArr.get("Character")?.tag.push(new Tag("Vinyl", typeArr.get("Character")?.type));

  await connection.save(typeArr.get("Character")?.tag)

  typeArr.get("Emotional")?.tag.push(new Tag("Aggressive", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Angry", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Bouncy", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Calming", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Carefree", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Cheerful", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Climactic", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Cool", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Dramatic", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Elegant", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Epic", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Excited", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Energetic", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Fun", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Futuristic", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Gentle", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Groovy", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Happy", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Haunting", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Hypnotic", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Industrial", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Manic", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Melancholic", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Mellow", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Mystical", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Nervous", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Passionate", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Peaceful", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Playful", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Powerful", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Rebellious", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Reflective", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Relaxing", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Romantic", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Rowdy", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Sad", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Sentimental", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Sexy", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Soothing", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Sophisticated", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Spacey", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Suspenseful", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Uplifting", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Urgent", typeArr.get("Emotional")?.type))
  typeArr.get("Emotional")?.tag.push(new Tag("Weird", typeArr.get("Emotional")?.type));

  await connection.save(typeArr.get("Emotional")?.tag)
};
func()
